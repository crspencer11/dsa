name: Update Solved Problems Count

on:
  push:
    branches:
      - master

jobs:
  update-count:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Count solved problems and update README
        id: count_problems
        run: |
          python -c "
          import os

          # Function to count solved problems by language
          def count_problems(directory):
              counts = {'Python': 0, 'Java': 0, 'Go': 0}
              for root, _, files in os.walk(directory):
                  for file in files:
                      if file.endswith('.py'):
                          counts['Python'] += 1
                      elif file.endswith('.java'):
                          counts['Java'] += 1
                      elif file.endswith('.go'):
                          counts['Go'] += 1
              return counts

          # Count problems
          counts = count_problems('.')

          # Update README
          readme_path = 'README.md'
          if not os.path.exists(readme_path):
              raise FileNotFoundError(f'{readme_path} does not exist.')

          with open(readme_path, 'r') as file:
              lines = file.readlines()

          updated = False
          for i, line in enumerate(lines):
              if line.startswith('## Solved Problems:'):
                  updated = True
                  lines[i + 1:i + 4] = [
                      f'Python: {counts["Python"]}\\n',
                      f'Java: {counts["Java"]}\\n',
                      f'Go: {counts["Go"]}\\n'
                  ]
                  break

          if not updated:
              lines.append('\\n## Solved Problems:\\n')
              lines.append(f'Python: {counts["Python"]}\\n')
              lines.append(f'Java: {counts["Java"]}\\n')
              lines.append(f'Go: {counts["Go"]}\\n')

          with open(readme_path, 'w') as file:
              file.writelines(lines)
          "

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --cached --exit-code || git commit -m "Update solved problems count"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
